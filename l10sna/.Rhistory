pwd<-"80799120"
#设置登录信息+伪造初始页面
pinfo1 <- c(
"account"=name,
"password"=pwd,
checkcode="3902"
)
# 登录信息编码转换
pinfo <- iconv(pinfo, from="GB18030", to="UTF-8")
# 尝试登录 post 方法
ttt <- postForm("http://10.98.49.65:8080/DrcomManager/loginactioncor.do?P=into", httpheader=myH,
.params=pinfo1, curl=cH, style="post")
text <- rawToChar(ttt)
ttt
myH1 <- c(
"Accept"= "application/json, text/javascript, */*; q=0.01",
# "Accept-Encoding"= "gzip, deflate",
"Accept-Language"="zh-CN,zh;q=0.9,en;q=0.8",
"Connection"="keep-alive",
"Content-Length" ="584",
"Content-Type"= "application/json",
"Cookie"= "userLoginHistoryMaterial=%5B%22FLDUSERNAME%22%2C%22FLDLOGINTIME%22%2C%22FLDLOGOUTTIME%22%2C%22FLDTIME%22%2C%22FLDFLOW%22%2C%22FLDCOSTMONEY%22%5D; basicQuery_false_1013_=%5B%7B%22field%22%3A%22FLDLOGINTIME%22%2C%22value%22%3A%7B%22field%22%3A%22FLDLOGINTIME%22%2C%22start%22%3A%222019-10-15%22%2C%22end%22%3A%222019-11-14%22%7D%7D%5D; JSESSIONID=E31DDC8BA24C2169B755CC633F70D0A3",
"DNT"= "1",
"Host"= "10.98.49.65:8080",
"Origin"= "http://10.98.49.65:8080",
"Referer"= "http://10.98.49.65:8080/DrcomManager/report_select.do?P=userLoginHistory&latest=401001",
"User-Agent"= "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.97 Safari/537.36",
"X-Requested-With"= "XMLHttpRequest"
)
myH1 <- c(
"Accept"= "application/json, text/javascript, */*; q=0.01",
# "Accept-Encoding"= "gzip, deflate",
"Accept-Language"="zh-CN,zh;q=0.9,en;q=0.8",
"Connection"="keep-alive",
"Content-Length" ="584",
"Content-Type"= "application/json",
"Cookie"= "userLoginHistoryMaterial=%5B%22FLDUSERNAME%22%2C%22FLDLOGINTIME%22%2C%22FLDLOGOUTTIME%22%2C%22FLDTIME%22%2C%22FLDFLOW%22%2C%22FLDCOSTMONEY%22%5D; basicQuery_false_1013_=%5B%7B%22field%22%3A%22FLDLOGINTIME%22%2C%22value%22%3A%7B%22field%22%3A%22FLDLOGINTIME%22%2C%22start%22%3A%222019-10-15%22%2C%22end%22%3A%222019-11-14%22%7D%7D%5D; JSESSIONID=E31DDC8BA24C2169B755CC633F70D0A3",
"DNT"= "1",
"Host"= "10.98.49.65:8080",
"Origin"= "http://10.98.49.65:8080",
"Referer"= "http://10.98.49.65:8080/DrcomManager/login.do?P=logincor",
"User-Agent"= "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.97 Safari/537.36",
"X-Requested-With"= "XMLHttpRequest"
)
# 设置debug容器与句柄
d <- debugGatherer()
cH <- getCurlHandle(debugfunction=d$update, verbose=T, ssl.verifyhost=F,
ssl.verifypeer=F, followlocation=T, cookiefile="cc.txt")
#设置登录信息+伪造初始页面
pinfo1 <- c(
"account"=name,
"password"=pwd,
checkcode="3902"
)
# 登录信息编码转换
pinfo <- iconv(pinfo, from="GB18030", to="UTF-8")
# 尝试登录 post 方法
ttt <- postForm("http://10.98.49.65:8080/DrcomManager/loginactioncor.do?P=into", httpheader=myH1,
.params=pinfo1, curl=cH, style="post")
text <- rawToChar(ttt)
ttt
ttt <- getURL("http://10.98.49.65:8080/DrcomManager/login.do?P=into&foo=&bar=&checkcode=7264&account=1013&password=ff2aed3f04fd5b7d0c37bfecbbc9fb32&random=",httpheader=myH1,curl=cH)
ttt
ttt <- getURL("http://10.98.49.65:8080/DrcomManager/login.do?P=into&foo=&bar=&checkcode=7264&account=1013&password=ff2aed3f04fd5b7d0c37bfecbbc9fb32&random=",httpheader=myH1,curl=cH)
ttt
#设置登录信息+伪造初始页面
pinfo <- c(
"order"="asc",
"limit"=500,
"offset"=2500,
"queryStatsId"="-1104",
"userLoginHistory"="TBLUSERLOGINHISTORY",
"andSql"=" AND ( FLDLOGINTIME BETWEEN TO_DATE('2019-10-15', 'yyyy-MM-dd') AND TO_DATE('2019-11-14 23:59:59', 'yyyy-MM-dd HH24:MI:SS'))",
"columns"='[{"fieldName":"FLDUSERNAME","title":"用户账号"},{"fieldName":"FLDLOGINTIME","title":"登录时间"},{"fieldName":"FLDLOGOUTTIME","title":"注销时间"},{"fieldName":"FLDTIME","title":"使用时长（分钟）"},{"fieldName":"FLDFLOW","title":"使用流量（MB）"},{"fieldName":"FLDCOSTMONEY","title":"计费金额（元）"}]')
# 登录信息编码转换
pinfo <- iconv(pinfo, from="GB18030", to="UTF-8")
# 用post方法获得第二页
ttt <- postForm("http://10.98.49.65:8080/DrcomManager/extAction.do?p=bsTableData", httpheader=myH,.encoding = "gb18030",
.params=pinfo, curl=cH,
binary=TRUE,style="post")
# 用post方法获得第二页
ttt <- postForm("http://10.98.49.65:8080/DrcomManager/extAction.do?p=bsTableData", httpheader=myH,.encoding = "gb18030",
.params=pinfo, curl=cH,
binary=TRUE,style="post")
# 用post方法获得第二页
ttt <- postForm("http://10.98.49.65:8080/DrcomManager/extAction.do?p=bsTableData", httpheader=myH1,.encoding = "gb18030",
.params=pinfo, curl=cH,
binary=TRUE,style="post")
#伪造报头，可以通过浏览器分析请求信息得到
myH <- c(
"Accept"= "application/json, text/javascript, */*; q=0.01",
# "Accept-Encoding"= "gzip, deflate",
"Accept-Language"="zh-CN,zh;q=0.9,en;q=0.8",
"Connection"="keep-alive",
"Content-Length" ="584",
"Content-Type"= "application/json",
"Cookie"= "JSESSIONID=7E75A94FB0C052147BB06A6723A884B2; userLoginHistoryMaterial=%5B%22FLDUSERNAME%22%2C%22FLDLOGINTIME%22%2C%22FLDLOGOUTTIME%22%2C%22FLDTIME%22%2C%22FLDFLOW%22%2C%22FLDCOSTMONEY%22%5D; basicQuery_false_1013_=%5B%7B%22field%22%3A%22FLDLOGINTIME%22%2C%22value%22%3A%7B%22field%22%3A%22FLDLOGINTIME%22%2C%22start%22%3A%222019-10-15%22%2C%22end%22%3A%222019-11-14%22%7D%7D%5D",
"DNT"= "1",
"Host"= "10.98.49.65:8080",
"Origin"= "http://10.98.49.65:8080",
"Referer"= "http://10.98.49.65:8080/DrcomManager/report_select.do?P=userLoginHistory&latest=401001",
"User-Agent"= "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.97 Safari/537.36",
"X-Requested-With"= "XMLHttpRequest"
)
myH1 <- c(
"Accept"= "application/json, text/javascript, */*; q=0.01",
# "Accept-Encoding"= "gzip, deflate",
"Accept-Language"="zh-CN,zh;q=0.9,en;q=0.8",
"Connection"="keep-alive",
"Content-Length" ="584",
"Content-Type"= "application/json",
"Cookie"= "userLoginHistoryMaterial=%5B%22FLDUSERNAME%22%2C%22FLDLOGINTIME%22%2C%22FLDLOGOUTTIME%22%2C%22FLDTIME%22%2C%22FLDFLOW%22%2C%22FLDCOSTMONEY%22%5D; basicQuery_false_1013_=%5B%7B%22field%22%3A%22FLDLOGINTIME%22%2C%22value%22%3A%7B%22field%22%3A%22FLDLOGINTIME%22%2C%22start%22%3A%222019-10-15%22%2C%22end%22%3A%222019-11-14%22%7D%7D%5D; JSESSIONID=E31DDC8BA24C2169B755CC633F70D0A3",
"DNT"= "1",
"Host"= "10.98.49.65:8080",
"Origin"= "http://10.98.49.65:8080",
"Referer"= "http://10.98.49.65:8080/DrcomManager/login.do?P=logincor",
"User-Agent"= "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.97 Safari/537.36",
"X-Requested-With"= "XMLHttpRequest"
)
# 设置debug容器与句柄
d <- debugGatherer()
cH <- getCurlHandle(debugfunction=d$update, verbose=T, ssl.verifyhost=F,
ssl.verifypeer=F, followlocation=T, cookiefile="cc.txt")
#设置登录信息+伪造初始页面
pinfo1 <- c(
"account"=name,
"password"=pwd,
checkcode="3902"
)
# 登录信息编码转换
pinfo <- iconv(pinfo, from="GB18030", to="UTF-8")
# 尝试登录 post 方法
ttt <- postForm("http://10.98.49.65:8080/DrcomManager/loginactioncor.do?P=into", httpheader=myH1,
.params=pinfo1, curl=cH, style="post")
ttt
# 尝试登录 post 方法
ttt <- postForm("http://10.98.49.65:8080/DrcomManager/loginactioncor.do?P=into", httpheader=myH1,
.params=pinfo1, curl=cH, style="post")
ttt
#登录头
myH1 <- c(
"Accept"="text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3",
"Accept-Encoding"="gzip, deflate",
"Accept-Language"= "zh-CN,zh;q=0.9,en;q=0.8",
"Cache-Control"= "max-age=0",
"Connection"= "keep-alive",
"Content-Length"= "87",
"Content-Type" = "application/x-www-form-urlencoded",
"Cookie"="userLoginHistoryMaterial=%5B%22FLDUSERNAME%22%2C%22FLDLOGINTIME%22%2C%22FLDLOGOUTTIME%22%2C%22FLDTIME%22%2C%22FLDFLOW%22%2C%22FLDCOSTMONEY%22%5D; basicQuery_false_1013_=%5B%7B%22field%22%3A%22FLDLOGINTIME%22%2C%22value%22%3A%7B%22field%22%3A%22FLDLOGINTIME%22%2C%22start%22%3A%222019-10-15%22%2C%22end%22%3A%222019-11-14%22%7D%7D%5D; JSESSIONID=BDAFB66526274589304D77B647FD1865",
"DNT"= "1",
"Host"= "10.98.49.65:8080",
"Origin"= "http://10.98.49.65:8080",
"Referer: http://10.98.49.65:8080/DrcomManager/login.do?P=logincor",
"Upgrade-Insecure-Requests"= "1",
"User-Agent" = "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.97 Safari/537.36"
)
#设置登录信息+伪造初始页面
pinfo1 <- c(
"account"=name,
"password"=pwd,
checkcode="3902"
)
# 尝试登录 post 方法
ttt <- postForm("http://10.98.49.65:8080/DrcomManager/loginactioncor.do?P=into", httpheader=myH1,
.params=pinfo1, curl=cH, style="post")
ttt
#设置登录信息+伪造初始页面
pinfo1 <- c(
"account"=name,
"password"=pwd,
checkcode="3902"
)
# 登录信息编码转换
pinfo1 <- iconv(pinfo, from="GB18030", to="UTF-8")
# 尝试登录 post 方法
ttt <- postForm("http://10.98.49.65:8080/DrcomManager/loginactioncor.do?P=into", httpheader=myH1,
.params=pinfo1, curl=cH, style="post")
ttt
#设置登录信息+伪造初始页面
pinfo1 <- c(
"account"=1013,
"password"="ff2aed3f04fd5b7d0c37bfecbbc9fb32",
checkcode="3902"
)
# 尝试登录 post 方法
ttt <- postForm("http://10.98.49.65:8080/DrcomManager/loginactioncor.do?P=into", httpheader=myH1,
.params=pinfo1, curl=cH, style="post")
ttt
#设置登录信息+伪造初始页面
pinfo1 <- c(
"account"=1013,
"password"="ff2aed3f04fd5b7d0c37bfecbbc9fb32",
checkcode="8021"
)
ttt
rm(ttt)
# 尝试登录 post 方法
ttt <- postForm("http://10.98.49.65:8080/DrcomManager/loginactioncor.do?P=into", httpheader=myH1,
.params=pinfo1, curl=cH, style="post")
ttt
#设置登录信息+伪造初始页面
pinfo <- c(
"order"="asc",
"limit"=500,
"offset"=2500,
"queryStatsId"="-1104",
"userLoginHistory"="TBLUSERLOGINHISTORY",
"andSql"=" AND ( FLDLOGINTIME BETWEEN TO_DATE('2019-10-15', 'yyyy-MM-dd') AND TO_DATE('2019-11-14 23:59:59', 'yyyy-MM-dd HH24:MI:SS'))",
"columns"='[{"fieldName":"FLDUSERNAME","title":"用户账号"},{"fieldName":"FLDLOGINTIME","title":"登录时间"},{"fieldName":"FLDLOGOUTTIME","title":"注销时间"},{"fieldName":"FLDTIME","title":"使用时长（分钟）"},{"fieldName":"FLDFLOW","title":"使用流量（MB）"},{"fieldName":"FLDCOSTMONEY","title":"计费金额（元）"}]')
# 登录信息编码转换
pinfo <- iconv(pinfo, from="GB18030", to="UTF-8")
# 用post方法获得第二页
ttt <- postForm("http://10.98.49.65:8080/DrcomManager/extAction.do?p=bsTableData", httpheader=myH,.encoding = "gb18030",
.params=pinfo, curl=cH,
binary=TRUE,style="post")
text <- rawToChar(ttt)
text
#伪造报头，可以通过浏览器分析请求信息得到
myH <- c(
"Accept"= "application/json, text/javascript, */*; q=0.01",
# "Accept-Encoding"= "gzip, deflate",
"Accept-Language"="zh-CN,zh;q=0.9,en;q=0.8",
"Connection"="keep-alive",
"Content-Length" ="584",
"Content-Type"= "application/json",
"Cookie"= "JSESSIONID=7E75A94FB0C052147BB06A6723A884B2; userLoginHistoryMaterial=%5B%22FLDUSERNAME%22%2C%22FLDLOGINTIME%22%2C%22FLDLOGOUTTIME%22%2C%22FLDTIME%22%2C%22FLDFLOW%22%2C%22FLDCOSTMONEY%22%5D; basicQuery_false_1013_=%5B%7B%22field%22%3A%22FLDLOGINTIME%22%2C%22value%22%3A%7B%22field%22%3A%22FLDLOGINTIME%22%2C%22start%22%3A%222019-10-15%22%2C%22end%22%3A%222019-11-14%22%7D%7D%5D",
"DNT"= "1",
"Host"= "10.98.49.65:8080",
"Origin"= "http://10.98.49.65:8080",
"Referer"= "http://10.98.49.65:8080/DrcomManager/report_select.do?P=userLoginHistory&latest=401001",
"User-Agent"= "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.97 Safari/537.36",
"X-Requested-With"= "XMLHttpRequest"
)
#登录头
myH1 <- c(
"Accept"="text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3",
"Accept-Encoding"="gzip, deflate",
"Accept-Language"= "zh-CN,zh;q=0.9,en;q=0.8",
"Cache-Control"= "max-age=0",
"Connection"= "keep-alive",
"Content-Length"= "87",
"Content-Type" = "application/x-www-form-urlencoded",
"Cookie"="userLoginHistoryMaterial=%5B%22FLDUSERNAME%22%2C%22FLDLOGINTIME%22%2C%22FLDLOGOUTTIME%22%2C%22FLDTIME%22%2C%22FLDFLOW%22%2C%22FLDCOSTMONEY%22%5D; basicQuery_false_1013_=%5B%7B%22field%22%3A%22FLDLOGINTIME%22%2C%22value%22%3A%7B%22field%22%3A%22FLDLOGINTIME%22%2C%22start%22%3A%222019-10-15%22%2C%22end%22%3A%222019-11-14%22%7D%7D%5D; JSESSIONID=BDAFB66526274589304D77B647FD1865",
"DNT"= "1",
"Host"= "10.98.49.65:8080",
"Origin"= "http://10.98.49.65:8080",
"Referer“= ”http://10.98.49.65:8080/DrcomManager/login.do?P=logincor",
"Upgrade-Insecure-Requests"= "1",
"User-Agent" = "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.97 Safari/537.36"
)
# 设置debug容器与句柄
d <- debugGatherer()
cH <- getCurlHandle(debugfunction=d$update, verbose=T, ssl.verifyhost=F,
ssl.verifypeer=F, followlocation=T, cookiefile="cc.txt")
#设置登录信息+伪造初始页面
pinfo1 <- c(
"account"=1013,
"password"="80799120",
checkcode="8021"
)
# 登录信息编码转换
pinfo1 <- iconv(pinfo, from="GB18030", to="UTF-8")
# 尝试登录 post 方法
ttt <- postForm("http://10.98.49.65:8080/DrcomManager/loginactioncor.do?P=into", httpheader=myH1,
.params=pinfo1, curl=cH, style="post")
ttt
cat(ttt,file="monet.html")
cat(doc,file="monet.html")
ttt
#########################
# 示例1.6：Rselenium+ phantomjs
# 渲染后抓取动态网页
# 案例来自 https://m.hellobi.com/post/10742
# 2018年1月1日测试可行，进行了修改
#########################
library("magrittr")
library("xml2")
library("XML")
library("RSelenium")
install.packages("RSelenium")
v1
library(tidyverse)
c(1:8) %>%
rep(5)
v1 <- c(1:8) %>%
rep(5)
v1
v1<-rep(c(1:8), times = 5)
v1
vec1 <- c(4.6, 4.8, 5.2, 6.3, 6.8, 7.1, 7.2, 7.4, 7.5, 8.6)
vec2 <- c('BJ', 'SH', 'SZ', 'TJ', 'WH', 'CS', 'JN', 'CQ', 'CD', 'ZZ')
df1 <- data.frame(vec1, vec2)
idnum <- 1:10
df2 <- data.frame(vec1, vec2,idnum=idnum)
df2<-transform(df1,idnum=idnum)
df2
df2 <- cbind(df2,idnum)
df2 <- data.frame(vec1, vec2,idnum=idnum)
df2
#or
df2 <- df1 %>%
mutate(idnum=dinum)
#or
df2 <- df1 %>%
mutate(idnum=idnum)
df2
# -- Exercise 3
# --- a. 将df2中的字符变量重命名为 'city', 数字变量为 'rate'
# --- b. 在df2中创建一个新变量等于rate的平方除以idnum
# -------------------------------------------------------------------------
names(df2)[1,2]=c("rate","city")
names(df2)[c(1,2)]=c("rate","city")
#or
df2 <- df2 %>%
mutate(rename(vec1=rate),rename(vec1=city))
rename(df2,vec1=rate,vec1=city)
names(df2)[c(1,2)]=c("rate","city")
df2 <- df2 %>% mutate(newvar=rate^2/idnum)
df2
e4 <- df2 %>%
filter(drate<=7&rate>=5)
e4 <- df2 %>%
filter(rate<=7&rate>=5)
e4 <- subset(df2,rate<=7&rate>=5)
e4
mean(df2$rate, na.rm = F)
median(df2$rate, na.rm = F)
sd(df2$rate, na.rm = F)
quantile(df2$rate, na.rm = F)
table_2 <- table1(~rate,data=df2,overall = "Total")
require(table1)
install.packages("table1")
require(table1)
mean(df2$rate, na.rm = F)
table_2 <- table1(~rate,data=df2,overall = "Total")
table_2
# -- Exercise 5
# --- 使用 df2, 描述 rate 变量
# ---------------------------------------------------------------
mean(df2$rate, na.rm = F)
median(df2$rate, na.rm = F)
sd(df2$rate, na.rm = F)
quantile(df2$rate, na.rm = F)
hist(df2$rate)
library(sjPlot)
df2 %>% descr(rate)
library(sjmisc)
df2 %>% descr(rate)
df2 %>% descr(rate,out="Viewer")
df2 %>% descr(rate,out="viewer")
summary(df2$rate)
hist(df2$rate,breaks=8,col="lightblue",ylim=c(0,10))
library(ggplot2)
ggplot(df2,aes(x=rate))+geom_histogram(binwidth = 5,breaks = c(0,1,8))
ggplot(df2,aes(x=rate))+
geom_histogram(bins=5)
hist(df2$rate,breaks=8,col="lightblue",ylim=c(0,10))
ggplot(df2,aes(x=rate))+
geom_histogram(bins=9)
ggplot(df2,aes(x=rate))+
geom_histogram(bins=9)+
title("直方图")
ggplot(df2,aes(x=rate))+
geom_histogram(bins=9)+
xtitle("直方图")
ggplot(df2,aes(x=rate))+
geom_histogram(bins=9)+
xlabel("直方图")
ggplot(df2,aes(x=rate))+
geom_histogram(bins=9)+
xlabel="直方图"
ggplot(df2,aes(x=rate))+
geom_histogram(bins=9)+
xtitle="直方图"
ggplot(df2,aes(x=rate))+
geom_histogram(bins=9)+
xtitle("直方图")
ggplot(df2,aes(x=rate))+
geom_histogram(bins=9)+
xlab ("直方图")
ggplot(df2,aes(x=rate))+
geom_histogram(bins=9,fill="blue")+
xlab ("比率")+
ylab("频数") +
theme(text = element_text(family = "STKaiti"))
ggplot(df2,aes(x=rate))+
geom_histogram(bins=9,fill="navy")+
xlab ("比率")+
ylab("频数") +
theme(text = element_text(family = "STKaiti"))
ggplot(df2,aes(x=rate))+
geom_histogram(bins=9,fill="lightblue")+
xlab ("比率")+
ylab("频数") +
theme(text = element_text(family = "STKaiti"))
hist(df2$rate,breaks=8,col="lightblue",ylim=c(0,10)) +title("图形")
hist(df2$rate,breaks=8,col="lightblue",ylim=c(0,10),title("图形")
hist(df2$rate,breaks=8,col="lightblue",ylim=c(0,10),title("图形")
)
hist(df2$rate,breaks=8,col="lightblue",ylim=c(0,10),title("图形") )
hist(df2$rate,breaks=8,col="lightblue",ylim=c(0,10),main("图形") )
hist(df2$rate,breaks=8,col="lightblue",ylim=c(0,10),main="图形",xlab="rate",ylab="count" )
hist(df2$rate,breaks=8,col="lightblue",ylim=c(0,10),main="图形",xlab="rate",ylab="count" ,famliy="STKaiti")
# ----------------------
# -- Exercise 6
# --- 使用df2的rate变量 创建histogram图，并做适当的修饰
# ---------------------------------------------------------------
par(famliy="STKaiti")
hist(df2$rate,breaks=8,col="lightblue",ylim=c(0,10),main="图形",xlab="rate",ylab="count" ,family="STKaiti")
hist(df2$rate,breaks=8,col="lightblue",ylim=c(0,10),main="比率的直方图",xlab="rate",ylab="count" ,family="STKaiti")
ggplot(df2,aes(x=rate))+
geom_histogram(bins=9,fill="lightblue")+
xlab ("比率")+
ylab("频数") +
theme(text = element_text(family = "STKaiti"))
hist(df2$rate,breaks=8,col="lightblue",ylim=c(0,10),main="比率的直方图",xlab="rate",ylab="count" ,family="STKaiti")
hist(df2$rate,breaks=8,col="lightblue",ylim=c(0,10),main="比率的直方图",xlab="rate",ylab="count" ,family="STKaiti")
ggplot(df2,aes(x=rate))+
geom_histogram(bins=9,fill="lightblue")+
xlab ("比率")+
ylab("频数") +
ylim(0,10)+
theme(text = element_text(family = "STKaiti"))
hist(df2$rate,breaks=8,col="lightblue",ylim=c(0,10),main="比率的直方图",xlab="rate",ylab="count" ,family="STKaiti")
ggplot(df2,aes(x=rate))+
geom_histogram(breaks=8,fill="lightblue")+
xlab ("比率")+
ylab("频数") +
ylim(0,10)+
theme(text = element_text(family = "STKaiti"))
ggplot(df2,aes(x=rate))+
geom_histogram(bins=8,fill="lightblue")+
xlab ("比率")+
ylab("频数") +
ylim(0,10)+
theme(text = element_text(family = "STKaiti"))
hist(df2$rate,breaks=8,col="lightblue",ylim=c(0,10),main="比率的直方图",xlab="rate",ylab="count" ,family="STKaiti")
ggplot(df2,aes(x=rate))+
geom_histogram(bins=8,fill="lightblue")+
xlab ("比率")+
ylab("频数") +
ylim(0,10)+
theme(text = element_text(family = "STKaiti"))
ggplot(df2,aes(x=rate))+
geom_histogram(bins=9,fill="lightblue")+
xlab ("比率")+
ylab("频数") +
ylim(0,10)+
theme(text = element_text(family = "STKaiti"))
hist(df2$rate,breaks=8,col="lightblue",ylim=c(0,10),main="比率的直方图",xlab="rate",ylab="count" ,family="STKaiti")
if (!require(igraph)) install.packages("igraph")
if (!require(network)) install.packages("network")
if (!require(sna)) install.packages("sna")
if (!require(visNetwork)) install.packages("visNetwork")
if (!require(ndtv)) install.packages("ndtv", dependencies=T)
# Optional packages
# Install those if you  would like to run through all of the
# examples below (those are not critical and can be skipped).
if (!require(RColorBrewer)) install.packages("RColorBrewer")
if (!require(extrafont)) install.packages("extrafont")
if (!require(png)) install.packages("png")
if (!require(animation)) install.packages("animation")
if (!require(maps)) install.packages("maps")
if (!require(geosphere)) install.packages("geosphere")
# Clear your workspace by removing all objects returned by ls():
rm(list = ls())
setwd("~/E/Bdata/liding17/2018R/l13sna")
# Set the working directory to the folder containing the workshop files:
setwd("/Users/liding/E/Bdata/liding17/2018R/l13sna/")
nodes <- read.csv("./Data/Dataset1-Media-Example-NODES.csv", header=T, as.is=T)
links <- read.csv("./Data/Dataset1-Media-Example-EDGES.csv", header=T, as.is=T)
# Examine the data:
head(nodes)
head(links)
nrow(nodes); length(unique(nodes$id))
nrow(links);
nrow(unique(links[,c("from", "to")]))
nrow(unique(links[,c("from", "to", "type")]))
# Collapse multiple links of the same type between the same two nodes
# by summing their weights, using aggregate() by "from", "to", & "type":
links <- aggregate(links[,3], links[,-3], sum)
links
links <- links[order(links$from, links$to),]
links <- links[order(links$from, links$to),]
# Examine the data:
head(nodes)
head(links)
nrow(nodes); length(unique(nodes$id))
nrow(links);
nrow(unique(links[,c("from", "to")]))
nrow(unique(links[,c("from", "to", "type")]))
links <- aggregate(links[,3], links[,-3], sum)
links <- read.csv("./Data/Dataset1-Media-Example-EDGES.csv", header=T, as.is=T)
# Examine the data:
head(nodes)
head(links)
nrow(nodes); length(unique(nodes$id))
nrow(links);
nrow(unique(links[,c("from", "to")]))
nrow(unique(links[,c("from", "to", "type")]))
links <- aggregate(links[,3], links[,-3], sum)
links <- read.csv("./Data/Dataset1-Media-Example-EDGES.csv", header=T, as.is=
links %>% group_by(from,to,type) %>%
summarize(x=sum(weight))
links
links %>% group_by(from,to,type) %>%
summarize(x=sum(weight))
links <- read.csv("./Data/Dataset1-Media-Example-EDGES.csv", header=T, as.is=T)
#same as
links %>% group_by(from,to,type) %>%
summarize(x=sum(weight))
links <- links[order(links$from, links$to),]
