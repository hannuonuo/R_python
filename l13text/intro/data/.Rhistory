libs <- c("plyr", "tidyverse", "ggplot2", "arm")
inpkg <- function(x){
if (!require(x)) install.packages(x)
}
sapply(libs, inpkg, character.only = TRUE)
sapply(libs, inpkg)
install.packages(x)
install.packages("arm")
help(package="ggplot2")
library("sfsmisc")
help(package="sfsmisc")
help(package= "rgl")
help(package= "foreign")
help(package= "lattice")
help(package= "MASS")
help(package= "mle4")
install.packages("mle4")
help(package= "lme4")
help(package= "lmtest")
help(package= "sandwich")
help(package= "viridis")
help(package= "geosphere")
help(package= "network")
install.package("network")
install.packages("network")
help(package= "network")
help(package= "png")
help(package= "")
help(package= "extrafont")
if (!require(tidyvese)) install.packages('tidyverse')
if (!require(tidyverse)) install.packages('tidyverse')
libs <- c("plyr", "tidyverse", "arm")
inpkg <- function(x){
if (!require(x)) install.packages(x)
}
sapply(libs, inpkg)
install.packages(x)
install.packages(x)
libs <- c("plyr", "tidyverse", "arm")
inpkg <- function(){
if (!require()) install.packages()
}
sapply(libs, inpkg)
sapply(libs, inpkg)
inpkg <- function(x){
if (!require(x)) install.packages(x)
}
libs <- c("plyr111", "tidyverse111", "arm111")
inpkg <- function(x){
if (!require(x)) install.packages(x)
}
sapply(libs, inpkg)
help(package= "scales")
help("matrix")
library(dplyr)
library(readr)
library(ggplot2)
library(gganimate)
help(datatable)
help(data.table)
help(filter)
library(readr)
Dataset <- read_csv("E/Bdata/liding17/2018R/data/Dataset.csv")
View(Dataset)
View(Dataset)
dim(Dataset)
names(Dataset)
Dataset$newage <- 2017+Dataset$age
names(Dataset)
library(tidyverse)
mpg
mpg
?mpg
ggplot(data = mpg)
p <- ggplot(data = mpg)
p
p+ geom_point(aes(x = displ, y = hwy))
ggplot(data = mpg)
+ geom_point(aes(x = displ, y = hwy))
ggplot(data = mpg)+
geom_point(aes(x = displ, y = hwy))
p <- ggplot(data = mpg)+
geom_point(aes(x = displ, y = hwy))
p <- ggplot(data = mpg)+
geom_point(aes(x = displ, y = hwy))
p
plot(p)
nrow(mpg)
ncol(mpg)
ggplot(data = mpg)+
geom_point(aes(x = hwy, y = cyl))
443*0.0068
devtools::install_github(ryapric/readit)
devtools::install_github("ryapric/readit")
knit_with_parameters('~/E/Bdata/liding17/2018R/l04Rbasic/lesson4_Rbasic.Rmd')
library(tidyverse)
if(!require(car)) install.packages("car")
installed.packages("tinytex")
installed.packages("tinytex")
install.packages("tinytex")
devtools::install_github("rstudio/rticles")
system("tex -v")
system("xelatex -v")
help(package="rticles")
27-9
devtools::install_github('yihui/xaringan')
install.packages("tufte", type = "source")
install.packages("formatR")
1887/5
if(!require(sjmisc)) install.packages("sjmisc")
if(!require(sjPlot)) install.packages("sjPlot")
library(tidyverse)
library(readr)
bike <- read_delim("../data/nc_bike_crash.csv", ";",
escape_double = FALSE, trim_ws = TRUE)
bike <- read.csv("nc_bike_crash.csv",
sep = ";",
stringsAsFactors = FALSE) %>%
tbl_df()
bike <- read.csv("../data/nc_bike_crash.csv",
sep = ";",
stringsAsFactors = FALSE) %>%
tbl_df()
class(bike)
class(data)
str(data)
head(data)
dim(data)
names(data)
dim(bike)
str(bike)
library(haven)
cgss2003 <- read_dta("../data/cgss2003.dta",encoding = "utf-8")
library(haven)
cgss2003 <- read_sav("../data/CGSS2003b.sav")
str(cgss2003$sitetype)
attr(cgss2003$sitetype,"label")
attr(cgss2003$sitetype,"labels")
cgss2003 %>%  count(sitetype)
ggplot(cgss2003, aes(x=sitetype)) +
geom_bar() +
scale_x_discrete(drop=TRUE)
if(!require(sjmisc)) install.packages("sjmisc")
if(!require(sjPlot)) install.packages("sjPlot")
sjt.frq(cgss2003$sitetype)
sjPlot::set_theme(theme.font ='STXihei' ) # STHeiti也可
cgss2003  %>% select(sitetype) %>%  sjplot(fun="frq")
cgss2003  %>%
filter(sitetype>0) %>%
select(sitetype) %>%
haven::as_factor() %>%
droplevels() %>%
sjplot(fun="frq",axis.title="调查地类型")
cgss2003  %>%
select(sitetype) %>%
sjmisc::to_label(drop.levels=TRUE) %>%
sjplot(fun="frq",axis.title="调查地类型")
cgss2003  %>%
select(birth05) %>%
sjlabelled::zap_labels() %>%
qplot(binwidth=5)
cgss2003  %>%
select(birth05) %>%
sjlabelled::zap_labels() %>%
count()
cgss2003  %>%
select(birth05) %>%
count()
cgss2003  %>%
select(birth05) %>%
table()
cgss2003  %>%
select(birth05) %>%
sjlabelled::zap_labels() %>%
table()
cgss2003  %>%
select(birth05) %>%
sjlabelled::zap_labels() %>%
table()
cgss2003  %>%
select(birth05) %>%
sjlabelled::zap_labels() %>%
class()
cgss2003  %>%
select(birth05) %>%
sjlabelled::zap_labels() %>%
qplot(birth05,binwidth=5)
cgss2003  %>%
select(birth05) %>%
sjlabelled::zap_labels() %>%
qplot(x=birth05,binwidth=5)
cgss2003  %>%
select(birth05) %>%
sjlabelled::zap_labels() %>%
qplot(x=birth05,data=.,binwidth=5)
library(haven)
cgss2003 <- read_sav("../data/CGSS2003.sav")
cgss2003[cgss2003==-1] <- NA;cgss2003[cgss2003==-2] <- NA;cgss2003[cgss2003==-3] <- NA
cgss2003 <- sjlabelled::drop_labels(cgss2003)
cgss2003 <- sjmisc::to_label(cgss2003)
w <- which(sapply(cgss2003, class) == 'labelled')
cgss2003[w] <- lapply(cgss2003[w],
function(x) as.numeric(as.character(x))
)
cgss <- foreign::read.spss("../data/CGSS2003.sav"
,reencode = "GB2312",
to.data.frame=TRUE,max.value.labels=50)
table(cgss$sex)
attr(cgss, "variable.labels")[1:6]
attr(cgss, "label.table")[6]
str(cgss$sitetype)
cgss[cgss=="无填答/不回答"] <- NA
cgss[cgss=="不知道/说不清"] <- NA
cgss[cgss=="不适合"] <- NA
cgss[cgss=="不适用"] <- NA
cgss <- droplevels(cgss)
ggplot(data=cgss,aes(x=sitetype))+geom_bar() +theme(text=element_text(family="STKaiti"))
library(devtools)
options(download.file.method = "wininet")
install_git("https://github.com/huashan/ezdf")
install_github('huashan/pander')
install.packages("pander")
install.packages("pander")
options(download.file.method =  "auto")
install.packages("pander")
library(ezdf)
install_git("https://github.com/huashan/ezdf")
devtools::install_github("huashan/ezdf")
library(ezdf)
dat <- readStata("../data/cgss2013",varNameEncoding="GB2312",charEncoding="GBK")
dat <- readStata("../data/cgss2003",varNameEncoding="GB2312",charEncoding="GBK")
dat <- readStata("../data/cgss2003.dta",varNameEncoding="GB2312",charEncoding="GBK")
cgss2003  %>%
qplot(x=birth05,data=.,binwidth=5)
help(package="pander")
tbl(dat, township ~ sex)
tbl(dat, township ~ commtype)
tbl(dat, commtype)
tbl(dat,commtype)
tbl(dat,~ commtype)
table1
table2
table3
table4a
table4b
table1 %>%
mutate(rate = cases / population * 10000)
table1 %>%
count(year, wt = cases)
ggplot(table1, aes(year, cases)) +
geom_line(aes(group = country), colour = "grey50") +
geom_point(aes(colour = country))
table4a %>%
gather(`1999`, `2000`, key = "year", value = "cases")
table4b %>%
gather(`1999`, `2000`, key = "year", value = "population")
table2
spread(table2, key = type, value = count)
health <- data.frame(id = rep(1:10, each = 4, len = 40),
trial = rep(c(1:4), 10),
score = rnorm(40, 3, .75))
health[1:10, ]
health_wide <- reshape(health, v.names = "score", idvar = "id",
timevar = "trial", direction = "wide")
health_wide[1:5, ]
head(reshape(health_wide))
health_long <- reshape(health_wide, idvar = "id", direction = "long")
health_long[1:15, ]
format(Sys.Date(),format="%m %d %Y")
format(Sys.Date(),format="%m - %d %Y")
format(Sys.Date(),format="%m - %d - %Y")
as_datetime(today())
library(lubridate)
as_datetime(today())
(datetime <- ymd_hms("2016-07-08 12:34:56"))
year(datetime) <- 2020
datetime
library(tidyverse)
library(tidyverse)
library(haven)
cgss2003 <- read_sav("../data/CGSS2003b.sav")
str(cgss2003$sitetype)
attr(cgss2003$sitetype,"label")
attr(cgss2003$sitetype,"labels")
attr(cgss2003$sitetype,"names")
attr(attr(cgss2003$sitetype,"labels"),"names")
attr(attr(cgss2003$sitetype,"labels"),"names")[7]
cgss2003  %>%
select(birth05) %>%
sjlabelled::zap_labels() %>%
qplot()
cgss2003  %>%
select(birth05) %>%
sjlabelled::zap_labels() %>%
qplot(x=birth05,data=.,binwidth=5)
cgss <- foreign::read.spss("../data/CGSS2003.sav"
,reencode = "GB2312",
to.data.frame=TRUE,max.value.labels=50)
table(cgss$sex)
write.csv(bike,"bike.csv")
getwd()
health <- data.frame(id = rep(1:10, each = 4, len = 40),
trial = rep(c(1:4), 10),
score = rnorm(40, 3, .75))
health
health2 <- spread(health,key=trial,value=score)
health2
health1 <- gather(health2,`1`,`2`,`3`,`4`,key="trial",value="score")
health1$trial <- as.numeric(health1$trial)
health1 <- gather(health2,`1`,`2`,`3`,`4`,key="trial",value="score")
350*5*3
350*6*3
320+280
1580*400
library(raster)
library(rgdal)
library(tidyverse)
library(mapproj)
library(jpeg)
library(grid)
library(maptools)
library(sp)
#读入外部数据
library(readxl)
# 拼接图片
library(jpeg)
library(png)
library(grid)
library(magick)
library(RColorBrewer)
library(classInt)
if(!require(MASS)) install.packages("MASS")
data(UScereal)
head(UScereal)
hist(UScereal$calories, breaks = 15)
hist(UScereal$calories, bin = 15)
hist(UScereal$calories, breaks = 15)
boxplot(UScereal$calories, horizontal = TRUE)
barplot(table(UScereal$shelf))
plot(UScereal$shelf,type="p")
barplot(add.margin(table(UScereal$shelf)))
barplot(margin.table(table(UScereal$shelf)))
barplot(margin.table(table(UScereal$shelf)),1)
barplot(margin.table(table(UScereal$shelf)),2)
margin.table(table(UScereal$shelf))
(table(UScereal$shelf))
barplot(prop.table(table(UScereal$shelf))))
barplot(prop.table(table(UScereal$shelf)))
plot(x = UScereal$sugars, y = UScereal$calories)
plot(calories ~ sugars, data = UScereal) # formula notation
plot(UScereal[, c(2:8, 10)]) # 8个变量的scatterplot matrix
boxplot(sugars ~ shelf, data = UScereal, horizontal = TRUE)
plot(calories ~ sugars, data = UScereal, col = shelf)
legend('topright', inset = .05, legend = c(3,2,1),
fill = c('green', 'red', 'black'))
plot(calories ~ sugars, data = UScereal, ylab = 'Calories',
xlab = 'Sugars (grams)', main = 'Nutrition of a Single Cup of Cereal')
plot(calories ~ sugars, data = UScereal, ann = FALSE)
title(main = 'Nutrition of a Single Cup of Cereal', ylab = 'Calories',
xlab = 'Sugars (grams)') # add afterwards
plot(calories ~ sugars, data = UScereal, col = shelf)
legend('topleft', inset = .05, legend = c(3,2,1),
fill = c('green', 'red', 'black'))
plot(calories ~ sugars, data = UScereal, pch = 15)
plot(calories ~ sugars, data = UScereal, pch = 19, col = shelf, bg = shelf)
legend('topright', inset = .05, legend = c(3,2,1),
fill = c('green', 'red', 'black'))
palette(c('#e5f5f9', '#99d8c9', '#2ca25f'))
plot(calories ~ sugars, data = UScereal, pch = 19, col = shelf, bg = shelf)
legend('topright', inset = .05, legend = c(3,2,1),
fill = c('#e5f5f9', '#99d8c9', '#2ca25f'))
plot(calories ~ sugars, data = UScereal, pch = shelf,col=shelf)
palette("default")
plot(calories ~ sugars, data = UScereal, col=shelf)
plot(calories ~ sugars, data = UScereal, pch = 15)
text(UScereal$sugars, UScereal$calories, row.names(UScereal),
col = "red", pos = 1, cex = .5)  ##可以测试学生帮助的使用1
plot(calories ~ sugars, data = UScereal, pch = 15)
text(UScereal$sugars, UScereal$calories, UScereal$mfr, col = "blue", pos = 2)
plot(calories ~ sugars, data = UScereal, pch = 19)
outliers <- UScereal[which(UScereal$calories > 300),]
text(outliers$sugars, outliers$calories - 15, labels = row.names(outliers))
plot(calories ~ sugars, data = UScereal, pch = 19)
identify(UScereal$carbo, UScereal$calories, n = 2, labels = row.names(UScereal))
plot(calories ~ sugars, data = UScereal, pch = 19, ylim = c(0, 325))
plot(calories ~ sugars, data = UScereal, pch = 19, ann = FALSE, cex = 1.5)
outliers <- UScereal[which(UScereal$calories > 300),]
text(outliers$sugars, outliers$calories - 15,
labels = row.names(outliers), cex = .75)
title(main = 'Nutrition of a Single Cup of Cereal', ylab = 'Calories',
xlab = 'Sugars (grams)', cex.main = 2, cex.lab = 1.5)
par(mfrow = c(2, 2))
hist(UScereal$calories, breaks = 15)
boxplot(sugars ~ shelf, data = UScereal)
hist(UScereal$sugars, breaks = 15)
boxplot(calories ~ shelf, data = UScereal)
par(mfrow = c(1, 1))
names(par())
par("col")
plot(c(0, 1), c(0, 1), type="n", xlab="", ylab="")  # coordinate system
plot(c(0, 1), c(0, 1), type="n", xlab="", ylab="", axes=FALSE) # w/o axes
names(par())
par("col")  # graphical parameters color
?par
# 例如，将作图窗口分为1行*2列
par(mfrow=c(1, 2))
plot(1:25, pch=1:25, xlab="Symbol Number", ylab="")  # symbols
lines(1:25, type="S", lty="dashed") # type p l b c o s S h
## 字符、轴、外边框
plot(26:1, pch=letters, xlab="letters", ylab="",
axes=FALSE, frame.plot=TRUE)
# no plot
plot(c(1, 7), c(0, 1), type="n", axes=FALSE,  # lines
xlab="Line Type (lty)", ylab="")
# add frame
box()
axis(1, at=1:6)  # x-axis 1 在南 2在西 3在北 4 在东
axis(2, at=c(0,0.5,1))
for (lty in 1:6)
lines(c(lty, lty, lty + 1), c(0, 0.5, 1), lty=lty)
plot(c(0, 1), c(0, 1), type="n", xlab="", ylab="")
axis(1, at=1:6)  # x-axis 1 在南 2在西 3在北 4 在东
axis(2, at=c(0,0.5,1))
for (lty in 1:6)
lines(c(lty, lty, lty + 1), c(0, 0.5, 1), lty=lty)
plot(c(0, 1), c(0, 1), type="n", xlab="", ylab="")
abline(0, 1) # intercept and slope 加参照线
abline(c(1, -1), lty="dashed")  # 过两点
# horizontal and vertical lines:
abline(h=seq(0, 1, by=0.1), v=seq(0, 1, by=0.1), col="gray")
axis(1, at=1:6)  # x-axis 1 在南 2在西 3在北 4 在东
axis(2, at=c(0,0.5,1))
for (lty in 1:6)
lines(c(lty, lty, lty + 1), c(0, 0.5, 1), lty=lty)
box()
a <-"十八大以来，中央在选用干部的思路上强调不搞表面文章、唯才是用、注重实效，布小林此番进步，正因为她是符合实际需要的人选，可谓举贤不避亲。"
nchar(a) #计算字符串长度
strsplit(a,split="，") #字符串切割
avec <- unlist(strsplit(a,split="，"))  #字符串拼接
paste(avec,collapse=",")
substr(a, 1,13)  #字符串截取
setwd("//Users/liding/E/Bdata/liding17/2018R/l14text/intro/data")
lecture<-read.csv("samgov1.csv",encoding="utf-8")
#############################
# 文本预处理
head(lecture)
nchar(lecture) #计算字符串长度
n=length(lecture[,1]);
print(n)
# 删除空行
res=lecture[lecture!=" "];
ls()
View(lecture)
res=gsub(pattern="http:[a-zA-Z\\/\\.0-9]+","",res);
#剔除特殊词
res=gsub(pattern="[我|你|的|了|一下|一个|没有|这样|现在|原告|被告|北京|法院|简称]","",res);
#剔除数字
res=gsub(pattern="/^[^0-9]*$/","",res);
library(jiebaR)
engine<-worker()
words<-"想学R语言，那就赶紧拿起手机，打开微信，关注公众号《跟着菜鸟一起学R语言》，跟着菜鸟一块飞。"
segment(words,engine)
words=unlist(lapply(X=res, FUN=segment));
seg <- qseg[res] #使用qseg类型分词，并把结果保存到对象seg中
seg <- seg[nchar(seg)>1] #去除字符长度小于2的词语
seg <- table(seg) #统计词频
length(seg)
seg
seg <- seg[!grepl('[0-9]+',names(seg))] #也可事后去除数字
length(seg)
seg
seg <- sort(seg, decreasing = TRUE)[1:100] #降序排序，并提取出现次数最多的前100个词语
seg #查看100个词频最高的
par(bg = "black")
wordcloud(names(seg), seg, colors = rainbow(100), random.order=F)
library(wordcloud)
require(scales)
library(RColorBrewer)
library(wordcloud)
install.packages("slam")
library(wordcloud)
require(scales)
library(RColorBrewer)
library(wordcloud)
library(wordcloud2)
wordcloud2(seg)
wordcloud2(d,shape="diamond")
wordcloud2(seg,shape="diamond")
wordcloud2(d, figPath="niu.jpg")
setwd("//Users/liding/E/Bdata/liding17/2018R/l14text/intro/data")
wordcloud2(seg, figPath="niu.jpg")
wordcloud2(seg,figPath="niu.jpg")
wordcloud2(seg,figPath="ma.jpg")
wordcloud2(seg,figPath="//Users/liding/E/Bdata/liding17/2018R/l14text/intro/data/ma.jpg")
wordcloud2(seg,figPath="ma.jpg")
seg <- seg[!grepl('[a-Z]+',names(seg))] #去除字母
seg <- seg[!grepl('[a-z]+',names(seg))] #去除字母
seg <- seg[!grepl('[a-zA-Z]+',names(seg))] #去除字母
length(seg) #查看处理完后剩余的词数
seg <- qseg[res] #使用qseg类型分词，并把结果保存到对象seg中
seg <- seg[nchar(seg)>1] #去除字符长度小于2的词语
seg <- table(seg) #统计词频
seg <- seg[!grepl('[0-9]+',names(seg))] #去除数字
seg <- seg[!grepl('[a-zA-Z]+',names(seg))] #去除字母
length(seg) #查看处理完后剩余的词数
seg <- sort(seg, decreasing = TRUE)[1:100] #降序排序，并提取出现次数最多的前100个词语
seg #查看100个词频最高的
library(wordcloud2)
wordcloud2(seg)
wordcloud2(seg,shape="diamond")
wordcloud2(seg,figPath="ma.jpg")
wordcloud2(seg,figPath="ma.jpg")
