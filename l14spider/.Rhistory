names(ddata)[which(names(ddata)=="G066")] <- "H066"
names(ddata)[which(names(ddata)=="G070")] <- "H070"
names(ddata)[which(names(ddata)=="G071")] <- "H071"
names(ddata)[which(names(ddata)=="G072")] <- "H072"
names(ddata)[which(names(ddata)=="G073")] <- "H073"
names(ddata)[which(names(ddata)=="G074")] <- "H074"
names(ddata)[which(names(ddata)=="G100")] <- "H100"
names(ddata)[which(names(ddata)=="G112")] <- "H111"
names(ddata)[which(names(ddata)=="G114")] <- "H112"
names(ddata)[which(names(ddata)=="G116")] <- "H113"
names(ddata)[which(names(ddata)=="G120")] <- "H120"
names(ddata)[which(names(ddata)=="G200")] <- "H200"
names(ddata)[which(names(ddata)=="G201")] <- "H201"
names(ddata)[which(names(ddata)=="G202")] <- "H202"
names(ddata)[which(names(ddata)=="G203")] <- "H203"
names(ddata)[which(names(ddata)=="G209")] <- "H204"
names(ddata)[which(names(ddata)=="G210")] <- "H205"
names(ddata)[which(names(ddata)=="G211")] <- "H206"
names(ddata)[which(names(ddata)=="G214")] <- "H207"
names(ddata)[which(names(ddata)=="G217")] <- "H208"
names(ddata)[which(names(ddata)=="G220")] <- "H209"
names(ddata)[which(names(ddata)=="G225")] <- "H210"
names(ddata)[which(names(ddata)=="G226")] <- "H211"
names(ddata)[which(names(ddata)=="G300")] <- "H300"
names(ddata)[which(names(ddata)=="G320")] <- "H320"
names(ddata)[which(names(ddata)=="G321")] <- "H321"
names(ddata)[which(names(ddata)=="G322")] <- "H322"
names(ddata)[which(names(ddata)=="G323")] <- "H323"
names(ddata)[which(names(ddata)=="G324")] <- "H324"
names(ddata)[which(names(ddata)=="G400")] <- "H400"
names(ddata)[which(names(ddata)=="G401")] <- "H401"
names(ddata)[which(names(ddata)=="G402")] <- "H402"
names(ddata)[which(names(ddata)=="G411")] <- "H403"
names(ddata)[which(names(ddata)=="G413")] <- "H404"
names(ddata)[which(names(ddata)=="G422")] <- "H405"
names(ddata)[which(names(ddata)=="G423")] <- "H406"
names(ddata)[which(names(ddata)=="G500")] <- "H500"
names(ddata)[which(names(ddata)=="G600")] <- "H600"
names(ddata)[which(names(ddata)=="G601")] <- "H601"
names(ddata)[which(names(ddata)=="G602")] <- "H602"
names(ddata)[which(names(ddata)=="G603")] <- "H603"
names(ddata)[which(names(ddata)=="G604")] <- "H604"
names(ddata)[which(names(ddata)=="G605")] <- "H605"
names(ddata)[which(names(ddata)=="G606")] <- "H606"
names(ddata)[which(names(ddata)=="G607")] <- "H607"
names(ddata)[which(names(ddata)=="G608")] <- "H608"
names(ddata)[which(names(ddata)=="G609")] <- "H609"
names(ddata)[which(names(ddata)=="G610")] <- "H610"
names(ddata)[which(names(ddata)=="G611")] <- "H611"
names(ddata)[which(names(ddata)=="G612")] <- "H612"
names(ddata)[which(names(ddata)=="G613")] <- "H613"
names(ddata)[which(names(ddata)=="G614")] <- "H614"
names(ddata)[which(names(ddata)=="G615")] <- "H615"
names(ddata)[which(names(ddata)=="G616")] <- "H616"
names(ddata)[which(names(ddata)=="G631A")] <- "H622A"
names(ddata)[which(names(ddata)=="G631B")] <- "H622B"
names(ddata)[which(names(ddata)=="G631C")] <- "H622C"
###############
#统一数据框的列数，方便使用rbind进行数据合并
hvar <- names(hdata)
gvar <- names(gdata)
dvar <- names(ddata)
#最大的变量集
allvar <- union(hvar,gvar)
allvar <- union(allvar,dvar)
#缺的变量（没有考虑变量类型问题）
nothvar <- setdiff(allvar, hvar)
notgvar <- setdiff(allvar, gvar)
notdvar <- setdiff(allvar, dvar)
#生成缺失变量
ahvar <- setNames(data.frame(matrix(ncol = length(nothvar), nrow=dim(hdata) [1])),nothvar)
agvar <- setNames(data.frame(matrix(ncol = length(notgvar), nrow=dim(gdata) [1])),notgvar)
advar <- setNames(data.frame(matrix(ncol = length(notdvar), nrow=dim(ddata) [1])),notdvar)
#用合并的方式将缺失变量放进去
hdata <- cbind(hdata,ahvar)
gdata <- cbind(gdata,agvar)
ddata <- cbind(ddata,advar)
rm(hvar,gvar,dvar,allvar,nothvar,notgvar,notdvar,ahvar,agvar,advar)
##############
#合并主干表格
alldata <- rbind(hdata,gdata)
alldata <- rbind(alldata,ddata)
##############
#生成地区码
#省码
alldata$prov<-substring(alldata$DZMSK,1,2)
#地级市
alldata$diqu<-substring(alldata$DZMSK,1,4)
#县级市
alldata$xian<-substring(alldata$DZMSK,1,6)
#乡镇
alldata$tcode<-substring(alldata$DZMSK,1,9)
#村代码
alldata$cuncode<-substring(alldata$DZMSK,1,12)
# 主表准备好了
alldata <- Reduce(function(dtf1, dtf2) merge(dtf1, dtf2, by = "DZMSK",all=TRUE),
list(alldata,hhdata,mrice))
#################################################
# 汇总统计
#################################################
##########################
#(1) 各类主体总数
########分地区的主体数量
zhuti_prov<-addmargins(table(alldata$prov,alldata$type) ,2)
zhuti_prov <-as.data.frame(unclass(zhuti_prov))
names(zhuti_prov) <- c("type1","type2","type3","allp")
zhuti_prov$prov <- rownames(zhuti_prov)
zhuti_diqu<-addmargins(table(alldata$diqu,alldata$type) ,2)
zhuti_diqu<-as.data.frame(unclass(zhuti_diqu))
names(zhuti_diqu) <- c("type1","type2","type3","allp")
zhuti_diqu$diqu <- rownames(zhuti_diqu)
zhuti_xian<-addmargins(table(alldata$xian,alldata$type) ,2)
zhuti_xian <-as.data.frame(unclass(zhuti_xian))
names(zhuti_xian) <- c("type1","type2","type3","allp")
zhuti_xian$xian <- rownames(zhuti_xian)
#zhuti_prov <- as.data.frame(unclass(stats::xtabs(~prov+H500+type  , data=alldata)))
##########################
#(2) 各类主体提供服务比例
########分省提供服务的比例
#总比例
svyn0_prov <- table(alldata$prov,alldata$H500)
svyn0_prov <-as.data.frame(unclass(svty0_prov ))
names(svyn0_prov ) <- c("serv_n","serv_y")
#分类主体的比例
svyn_prov <- as.data.frame(unclass(stats::xtabs(~ prov+H500+type  , data=alldata)))
names(svyn_prov ) <- c("serv1_n","serv1_y","serv2_n","serv2_y","serv3_n","serv3_y")
#合并
svyn_prov <- cbind(svyn_prov,svyn0_prov)
svyn_prov$prov <- rownames(svyn_prov)
rm(svyn0_prov)
########分地区提供服务的比例
#总比例
svyn0_diqu <- table(alldata$diqu,alldata$H500)
svyn0_diqu <-as.data.frame(unclass(svyn0_diqu))
names(svyn0_diqu ) <- c("serv_n","serv_y")
#分类主体的比例
svyn_diqu <- as.data.frame(unclass(stats::xtabs(~ diqu+H500+type  , data=alldata)))
names(svyn_diqu) <- c("serv1_n","serv1_y","serv2_n","serv2_y","serv3_n","serv3_y")
#合并
svyn_diqu <- cbind(svyn_diqu,svyn0_diqu)
svyn_diqu$diqu <- rownames(svyn_diqu)
rm(svyn0_diqu)
########分县提供服务的比例
#总比例
svyn0_xian <- table(alldata$xian,alldata$H500)
svyn0_xian <-as.data.frame(unclass(svyn0_xian))
names(svyn0_xian ) <- c("serv_n","serv_y")
#分类主体的比例
svyn_xian <- as.data.frame(unclass(stats::xtabs(~ xian+H500+type  , data=alldata)))
names(svyn_xian) <- c("serv1_n","serv1_y","serv2_n","serv2_y","serv3_n","serv3_y")
#合并
svyn_xian <- cbind(svyn_xian,svyn0_xian)
svyn_xian$xian <- rownames(svyn_xian)
rm(svyn0_xian)
###############################################
#(4)播种面积 -粮食作物
# 普通户是否开展农业
alldata$H080[alldata$H080==2] <- 0
summary(alldata$H080[alldata$type==1])
#是否有农作物
alldata$H100[alldata$H100==2] <- 0
summary(alldata$H100)
#是否有粮食作物
alldata$grain <- !is.na(alldata$H103)
# 有部分案例表示有农作物，但是没有粮食作物
# 占表示有的案例的13%左右
# 他们有可能是有其他经济作物
table(alldata$H100,alldata$grain)
table(alldata$H080,alldata$grain)
#粮食作物播种面积
summary(alldata$H103)
hist(alldata$H103)
hist(alldata$H103[alldata$H103<20],col="red")
#播种面积取对数
alldata$lngrain <- log(alldata$H103)
hist(alldata$lngrain,col="red")
#2016年实际耕作土地面积
summary(alldata$H070)
hist(alldata$H070)
#粮食播种面积/土地面积=粮食播种指数
alldata$ricezs=alldata$H103/alldata$H070
alldata$ricezs[(alldata$H070==0)] <- NA
summary(alldata$ricezs)
hist(alldata$ricezs,col="red")
#生产经营方式(单位户没有)
#1.公司+农户 2.农民合作社 3.专业协会 4.土地托管 5.其他 6.没有
# 经营管理方式
jyfangshi0 <-do.call(cbind, lapply(alldata[,c("H621A","H621B","H621C","H621D","H621E","H621F")], summary))
alldata$H621A[is.na(alldata$H621A)&alldata$type<3] <- 0
alldata$H621B[is.na(alldata$H621B)&alldata$type<3] <- 0
alldata$H621C[is.na(alldata$H621C)&alldata$type<3] <- 0
alldata$H621D[is.na(alldata$H621D)&alldata$type<3] <- 0
alldata$H621E[is.na(alldata$H621E)&alldata$type<3] <- 0
alldata$H621F[is.na(alldata$H621F)&alldata$type<3] <- 0
jyfangshi1 <-do.call(cbind, lapply(alldata[,c("H621A","H621B","H621C","H621D","H621E","H621F")], summary))
#########################################
# 实际耕作土地面积
plot1 <- aggregate(H070~type,data=alldata,FUN=mean)$H070
names(plot1)=c("普通户","规模户","单位户")
par(family="STKaiti")
c_range <- range(0,plot1+20)
# 画图
myplot1 <- barplot(plot1,
ylim=c_range,
names.arg=c("普通户","规模户","单位户"),
main="不同经营主体2016年实际耕种土地面积（亩）")
text(myplot1,
plot1+10 ,
round(plot1, digits=2),
cex=1)
box()
# 粮食作物面积
plot1 <- aggregate(H103~type,data=alldata,FUN=mean,na.action=na.pass,na.rm=T)$H103
names(plot1)=c("普通户","规模户","单位户")
par(family="STKaiti")
c_range <- range(0,plot1+20)
# 画图
myplot1 <- barplot(plot1,
ylim=c_range,
names.arg=c("普通户","规模户","单位户"),
main="不同经营主体2016年粮食作物播种面积（亩）")
text(myplot1,
plot1+10 ,
round(plot1, digits=2),
cex=1)
box()
###############################################
###############################################
#汇总种植相关的信息
#是否农业，是否
svar <- c("H002","H004","H008","H009","H013","H015","H035","H040","H050","H200","H300","H320","H400","H600")
alldata[svar][alldata[svar]==2] <- 0
summary(alldata[svar])
stmain_prov<- aggregate(cbind(svar)~prov, alldata, mean, na.rm=T,na.action=na.pass)
stmain_prov<- aggregate(cbind(H002,H004,H008,H009,H013,H015,H035,H040,H050,H200,H300,H320,H400,H600,H080,H100,grain,H070,H103,ricezs) ~ prov, alldata, mean, na.rm=T,na.action=na.pass)
head(stmain_prov)
alldata$H601[is.na(alldata$H601)] <- 0
alldata$H602[is.na(alldata$H602)] <- 0
alldata$H603[is.na(alldata$H603)] <- 0
alldata$H604[is.na(alldata$H604)] <- 0
alldata$H605[is.na(alldata$H605)] <- 0
alldata$H606[is.na(alldata$H606)] <- 0
alldata$H607[is.na(alldata$H607)] <- 0
alldata$H608[is.na(alldata$H608)] <- 0
alldata$H609[is.na(alldata$H609)] <- 0
alldata$H610[is.na(alldata$H610)] <- 0
alldata$H611[is.na(alldata$H611)] <- 0
alldata$H612[is.na(alldata$H612)] <- 0
alldata$H613[is.na(alldata$H613)] <- 0
alldata$H614[is.na(alldata$H614)] <- 0
alldata$H615[is.na(alldata$H615)] <- 0
alldata$H616[is.na(alldata$H616)] <- 0
alldata$nongji <- alldata$H601 +
alldata$H602+
alldata$H603+
alldata$H604+
alldata$H605+
alldata$H606+
alldata$H607+
alldata$H608+
alldata$H609+
alldata$H610+
alldata$H611+
alldata$H612+
alldata$H613+
alldata$H614+
alldata$H615+
alldata$H616
stmain_prov<- aggregate(cbind(H002,H004,H008,H009,H013,H015,H035,H040,H050,H200,H300,H320,H400,H600,H080,H100,grain,H070,H103,ricezs,H051,H056,H072,H075,nongji) ~ prov, alldata, mean, na.rm=T,na.action=na.pass)
stmain_diqu<- aggregate(cbind(H002,H004,H008,H009,H013,H015,H035,H040,H050,H200,H300,H320,H400,H600,H080,H100,grain,H070,H103,ricezs,H051,H056,H072,H075,nongji) ~ diqu, alldata, mean, na.rm=T,na.action=na.pass)
stmain_xian<- aggregate(cbind(H002,H004,H008,H009,H013,H015,H035,H040,H050,H200,H300,H320,H400,H600,H080,H100,grain,H070,H103,ricezs,H051,H056,H072,H075,nongji) ~ xian, alldata, mean, na.rm=T,na.action=na.pass)
head(stmain_xian)
stmain_prov<- aggregate(cbind(H002,H004,H008,H009,H013,H015,H035,H040,H050,H200,H300,H320,H400,H600,H080,H100,grain,H070,H103,ricezs,H051,H056,H072,H075,nongji,np,nl,ne,tt,no,naw) ~ prov, alldata, mean, na.rm=T,na.action=na.pass)
stmain_diqu<- aggregate(cbind(H002,H004,H008,H009,H013,H015,H035,H040,H050,H200,H300,H320,H400,H600,H080,H100,grain,H070,H103,ricezs,H051,H056,H072,H075,nongji,np,nl,ne,tt,no,naw) ~ diqu, alldata, mean, na.rm=T,na.action=na.pass)
stmain_xian<- aggregate(cbind(H002,H004,H008,H009,H013,H015,H035,H040,H050,H200,H300,H320,H400,H600,H080,H100,grain,H070,H103,ricezs,H051,H056,H072,H075,nongji,np,nl,ne,tt,no,naw) ~ xian, alldata, mean, na.rm=T,na.action=na.pass)
##农机数据
nongjvar <- c("H601","H602","H603","H604","H605","H606","H607","H608","H608","H609","H610","H611","H612","H613","H614","H615","H616")
alldata[nongjvar][is.na(alldata[nongjvar])] <- 0
##农机数据
nongjvar <- c("H601","H602","H603","H604","H605","H606","H607","H608","H609","H610","H611","H612","H613","H614","H615","H616")
alldata[nongjvar][is.na(alldata[nongjvar])] <- 0
alldata$nongji <- alldata$H601 +
alldata$H602+
alldata$H603+
alldata$H604+
alldata$H605+
alldata$H606+
alldata$H607+
alldata$H608+
alldata$H609+
alldata$H610+
alldata$H611+
alldata$H612+
alldata$H613+
alldata$H614+
alldata$H615+
alldata$H616
## 农机描述
summary(alldata$nongji)
freqnongji <- table(alldata$nongji)
hist(alldata$nongji,main="农机数直方图",xlab="农机数",ylab="百分比",col="red",freq=FALSE)
freqnongji
summary(alldata$nongji)
summary(alldata$H600)
table(alldata$nongji,alldata$H600)
?table
table(alldata$nongji,alldata$H600,useNA = "ifany")
stv_prov<- aggregate(cbind(C003,C002,C009,C010,C070,C020,C019,C105,C108,C113,C080,C086) ~ prov, vdata, mean, na.rm=T,na.action=na.pass)
names(vdata)
stv_prov<- aggregate(cbind(c003,c002,c009,c010,c070,c020,c019,c105,c108,c113,c080,c086) ~ prov, vdata, mean, na.rm=T,na.action=na.pass)
stv_prov<- aggregate(cbind(c002,c009,c010,c070,c020,c019,c105,c108,c113,c080,c086) ~ prov, vdata, mean, na.rm=T,na.action=na.pass)
stv_prov<- aggregate(cbind(c002,c009,c010,c070,c020,c019,c105,c113,c080,c086) ~ prov, vdata, mean, na.rm=T,na.action=na.pass)
stv_prov<- aggregate(cbind(c002,c009,c010,c070,c020,c019,c105,c080,c086) ~ prov, vdata, mean, na.rm=T,na.action=na.pass)
stv_prov<- aggregate(cbind(c002,c009,c010,c070,c020,c019,c105,c086) ~ prov, vdata, mean, na.rm=T,na.action=na.pass)
stv_prov<- aggregate(cbind(c002,c009,c010,c070,c019,c105,c086) ~ prov, vdata, mean, na.rm=T,na.action=na.pass)
stv_prov<- aggregate(cbind(c002,c009,c010,c070,c105,c086) ~ prov, vdata, mean, na.rm=T,na.action=na.pass)
#生成地区码
#省码
alldata$prov<-substring(alldata$DZMSK,1,2)
#生成地区码
#省码
vdata$prov<-substring(alldata$DZMSK,1,2)
#生成地区码
#省码
vdata$prov<-substring(vdata$DZMSK,1,2)
#地级市
vdata$diqu<-substring(vdata$DZMSK,1,4)
#县级市
vdata$xian<-substring(vdata$DZMSK,1,6)
stv_prov<- aggregate(cbind(c002,c009,c010,c070,c105,c086) ~ prov, vdata, mean, na.rm=T,na.action=na.pass)
names(vdata)
stv_prov<- aggregate(cbind(c002,c009,c010,c103,c070,c105,c086) ~ prov, vdata, mean, na.rm=T,na.action=na.pass)
###############################################
#八、模型
###############################################
m1 <- glm(H080 ~ H051 + nl ,data=alldata,family=binomial(link="logit"))
ml
m1
summary(m1)
###############################################
#八、模型
###############################################
m1 <- glm(H080 ~ H051 + nl + H005,data=alldata,family=binomial(link="logit"))
summary(m1)
#土地面积与粮食面积
plot(alldata$H051,alldata$H103)
summary(alldata$H051)
summary(alldata$H051[alldata$H051>1000])
table(alldata$H051[alldata$H051>1000])
#土地面积与粮食面积
plot(alldata$H070,alldata$H103)
#土地面积与粮食面积
plot(alldata$H056,alldata$H103)
#土地面积与粮食面积
plot(alldata$H056,alldata$H103)
plot(alldata$H070,alldata$H103)
alldata$diqu <- factor(alldata$diqu)
m0 <- lme(H103 ~ 1, random = ~1 | diqu, alldata)
m0 <- lme(H103 ~ 1, random = ~1 | diqu, alldata,na.action=na.omit)
summary(m0)
cbind(means = with(alldata, tapply(H103, diqu,
+     mean)), coef(m0))
cbind(means = with(alldata, tapply(H103, diqu,   mean)), coef(m0))
alldata$diqu <- factor(alldata$diqu)
m0 <- lme(H103 ~ 1, random = ~1 | diqu, alldata,na.action=na.pass)
cbind(means = with(alldata, tapply(H103[!is.na(alldata$H103)], diqu[!is.na(alldata$H103)], mean)), coef(m0))
with(alldata, tapply(H103, diqu, mean))
with(alldata, tapply(H103, diqu, mean,na.rm=T))
?getfile
？download.file
?download.file
?hist
?text
?barplot
?mtext
?write.csv
head(alldata$xian)
775+1256
setwd("/Users/liding/E/Bdata/liding17/2018R/l16spider")
library(httr)
library(xml2)
url<-"http://bj.xiaozhu.com/fangzi/5098280314.html"
html<-GET(url)  # 使用默认设定，很简单
library(httr)
library(xml2)
url<-"http://bj.xiaozhu.com/fangzi/5098280314.html"
html<-GET(url)
# 查看返回对象内容
class(html)
headers(html)
cookies(html)
str(html)
doc<-content(html,"raw", encoding = "utf-8") # raw十六进制码
doc
doc<-content(html,"text")  # text 文本
doc
getwd()
cat(doc,file="xiaozhu.html") # 可以列印出去
doc<-content(html,"parsed") # parsed 解析
class(doc)
doc
xml_find_all(doc,"//h4")[1]
xml_find_all(doc,"//h4")
library(RCurl)
html<-getURL(url)
class(html) #注意:得到的是文本
html
#通过XML包的htmlParse解析
doc <- XML::htmlParse(html,encoding = "utf-8")
doc["//h4"]
doc["//h4"][1]
XML::getNodeSet(doc, path ="//h4")
doc <- read_html(html,encoding = "utf-8")
class(doc)
xml2::xml_find_all(doc,"//h4")
debugInfo <- debugGatherer()
headers<-c("User-Agent" = "Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/61.0.3163.79 Safari/537.36")
handle <- getCurlHandle(                        debugfunction = debugInfo$update,                        followlocation = TRUE,                        cookiefile = "",                              verbose = T  )
url<- "http://bj.xiaozhu.com/fangzi/5098280314.html"
response<-getURL(
url,  #URL地址
#局部配置参数（作用于本次请求）
.opts=list(header=TRUE,httpheader = headers),
curl=handle,   #curl句柄，初始化配置参数（.opts内声明的配置参数会覆盖curl中的默认参数）
.encoding="utf-8" #编码参数
)
class(response) # getURL返回的是文本
# 两种解析，相同输入，不同输出。
doc <-xml2::read_html(response, encoding = "utf-8")
doc <- XML::htmlParse(html,encoding = "utf-8")
xml2::xml_find_all(doc,"//h4")
XML::getNodeSet(doc, path ="//h4") #
##########################
#示例1.3：Rcurl登录请求
#########################
#RCurl 进行登录，设置cookies等等
# 使用RCurl包进行登录操作
library(RCurl)
library(rjson)
name<-"yyttrr3242342@163.com"
pwd<-"bmeB500bmeB500"
#memory.limit(4000)  # mac版本不用设定
#伪造报头，可以通过浏览器分析请求信息得到
myH <- c(
"User-Agent"="Mozilla/5.0 (Windows; U; Windows NT 5.1; zh-CN; rv:1.9.2.12) Gecko/20101026 Firefox/3.6.12",
"Accept"="text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8",
"Accept-Language"="zh-cn,zh;q=0.5",
#"Accept-Encoding"="gzip,deflate",
"Accept-Charset"="GB2312,utf-8;q=0.7,*;q=0.7",
"Keep-Alive"="115",
"Connection"="keep-alive",
#"Host"="status.renren.com",
"Content-Type"="application/x-www-form-urlencoded; charset=UTF-8",
#"Content-Length"=as.character(nchar(xx)*2+1),
"Pragma"="no-cache",
#"Referer"="http://status.renren.com/ajaxproxy.htm",
"Cache-Control"="no-cache"
)
# 设置debug容器与句柄
d <- debugGatherer()
cH <- getCurlHandle(debugfunction=d$update, verbose=T, ssl.verifyhost=F,
ssl.verifypeer=F, followlocation=T, cookiefile="cc.txt")
#设置登录信息+伪造初始页面
pinfo <- c(
"email"=name,
"password"=pwd,
"origURL"="http://www.renren.com/SysHome.do",
"domain"="renren.com"
)
# 登录信息编码转换
pinfo <- iconv(pinfo, from="GB18030", to="UTF-8")
# 尝试登录 post 方法
ttt <- postForm("http://www.renren.com/Login.do?rf=r", httpheader=myH,
.params=pinfo, curl=cH, style="post")
#查看cookies
getCurlInfo(cH)[["cookielist"]]
#已经登录。获取主页找到找到自己的用户名和id
response <- getURL("http://www.renren.com", curl=cH, .encoding="gbk")
# 写出成为文本文件，利用正则表达式提取出用户ID
write(response , "temp.txt")
doc <- readLines("temp.txt", encoding="UTF-8")
# 移除临时文件
file.remove("temp.txt")
rm(response )
hh <- doc[grep("ruid", doc)]
hh <- gsub("[^0-9]", "", hh)
uid <- hh
uid
thisurl <- paste("http://friend.renren.com/GetFriendList.do?curpage=0&id=", uid, sep="")
response <- getURL(thisurl, curl=cH, .encoding="gbk")
cat(response,file="a.txt")
## 15 分
## 读入数据 1
gap <- read.csv("/Users/liding/E/Bdata/liding17/考试2017R/gapminder.csv")
head(gap)
library(tidyverse)
# 数据整理分 3
gdata <- filter(gap,country=="South Africa"|country=="China"|country=="India"|country=="Japan" )
ggplot(gdata,aes(x=year,y=lifeExp,
group=country,fill=country))+
geom_area(color='black',size=0.3,
position=position_fill())+
scale_fill_brewer()
# 点线叠加分  5
# 三个标签分  3
# 中文字体乱码分 3
ggplot(gdata,aes(x=year,y=lifeExp,
color=country))+
geom_line() +
geom_point() +
theme(text = element_text(family = "STKaiti")) +
labs(color="国家",x="年份",y="预期寿命")
